@model BookStoreManagementSystem.Models.S4452232

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

<div class='row'>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class='col-xs-2'>
            <div class="form-group">
                    @Html.DropDownList("attribute", new List<SelectListItem> {
                    new SelectListItem { Text = "ID", Value = "id" },
                    new SelectListItem { Text = "Name", Value = "name" },
                    new SelectListItem { Text = "Author", Value = "author" },
                    new SelectListItem { Text = "Year", Value = "year" }}, new { @class = "form-control" })
            </div>
        </div>

        <div id="id" class='col-sm-3'>
            <div class="form-group">
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", id = "id-textbox" } })
                    <div id="id-message">@Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })</div>
            </div>
        </div>

        <div hidden id="name" class='col-sm-3'>
            <div class="form-group">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "name-textbox" } })
                    <div id="name-message">@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })</div>
            </div>
        </div>

        <div hidden id="author" class='col-sm-3'>
            <div class="form-group">
                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", id = "author-textbox" } })
                    <div id="author-message">@Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })</div>
            </div>
        </div>

        <div hidden id="year" class='col-sm-3'>
            <div class="form-group">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", id = "year-textbox" } })
                    <div id="year-message">@Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })</div>
            </div>
        </div>

    <div class='col-xs-1'>
        <div class='form-group'>
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Index)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Year)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th></th>
    </tr>

    @for (int i = 1; i <= ViewBag.books.Count; i++) {
        <tr>
            <td>
                @i
            </td>
            <td>
                @ViewBag.books[i - 1].ID
            </td>
            <td>
                @ViewBag.books[i - 1].Name
            </td>
            <td>
                @ViewBag.books[i - 1].Author
            </td>
            <td>
                @ViewBag.books[i - 1].Year
            </td>
            <td>
                $@ViewBag.books[i - 1].Price
            </td>
            <td>
                @ViewBag.books[i - 1].Stock
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("/Scripts/search-form.js")"></script>

<script>
        var message = '@(ViewBag.message)';
        if (message != "") {
            alert(message);
        }
</script>
}